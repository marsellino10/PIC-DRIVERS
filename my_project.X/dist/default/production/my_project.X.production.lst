

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 25 19:56:40 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 05/05/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K20 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  00FAA8                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_reg
    63  00FAA8  80                 	db	128
    64  00FAA9  0F                 	db	15
    65  00FAAA  81                 	db	129
    66  00FAAB  0F                 	db	15
    67  00FAAC  82                 	db	130
    68  00FAAD  0F                 	db	15
    69  00FAAE  83                 	db	131
    70  00FAAF  0F                 	db	15
    71  00FAB0  84                 	db	132
    72  00FAB1  0F                 	db	15
    73                           
    74                           ;initializer for _lat_reg
    75  00FAB2  89                 	db	137
    76  00FAB3  0F                 	db	15
    77  00FAB4  8A                 	db	138
    78  00FAB5  0F                 	db	15
    79  00FAB6  8B                 	db	139
    80  00FAB7  0F                 	db	15
    81  00FAB8  8C                 	db	140
    82  00FAB9  0F                 	db	15
    83  00FABA  8D                 	db	141
    84  00FABB  0F                 	db	15
    85                           
    86                           ;initializer for _tris_reg
    87  00FABC  92                 	db	146
    88  00FABD  0F                 	db	15
    89  00FABE  93                 	db	147
    90  00FABF  0F                 	db	15
    91  00FAC0  94                 	db	148
    92  00FAC1  0F                 	db	15
    93  00FAC2  95                 	db	149
    94  00FAC3  0F                 	db	15
    95  00FAC4  96                 	db	150
    96  00FAC5  0F                 	db	15
    97                           
    98                           ;initializer for _led
    99  00FAC6  0A                 	db	10
   100  00FAC7  12                 	db	18
   101  00FAC8  1A                 	db	26
   102  00FAC9  22                 	db	34
   103  00FACA  2A                 	db	42
   104  00FACB  32                 	db	50
   105  00FACC  3A                 	db	58
   106                           
   107                           ;initializer for _button1
   108  00FACD  02                 	db	2
   109  0000                     _PORTE	set	3972
   110  0000                     _PORTD	set	3971
   111  0000                     _PORTC	set	3970
   112  0000                     _PORTB	set	3969
   113  0000                     _PORTA	set	3968
   114  0000                     _LATE	set	3981
   115  0000                     _LATD	set	3980
   116  0000                     _LATC	set	3979
   117  0000                     _LATB	set	3978
   118  0000                     _LATA	set	3977
   119  0000                     _TRISE	set	3990
   120  0000                     _TRISD	set	3989
   121  0000                     _TRISC	set	3988
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISA	set	3986
   124                           
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128  00FB46                     __pcinit:
   129                           	callstack 0
   130  00FB46                     start_initialization:
   131                           	callstack 0
   132  00FB46                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (38 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137  00FB46  0EA8               	movlw	low __pidataCOMRAM
   138  00FB48  6EF6               	movwf	tblptrl,c
   139  00FB4A  0EFA               	movlw	high __pidataCOMRAM
   140  00FB4C  6EF7               	movwf	tblptrh,c
   141  00FB4E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142  00FB50  6EF8               	movwf	tblptru,c
   143  00FB52  EE00  F001         	lfsr	0,__pdataCOMRAM
   144  00FB56  EE10 F026          	lfsr	1,38
   145  00FB5A                     copy_data0:
   146  00FB5A  0009               	tblrd		*+
   147  00FB5C  CFF5 FFEE          	movff	tablat,postinc0
   148  00FB60  50E5               	movf	postdec1,w,c
   149  00FB62  50E1               	movf	fsr1l,w,c
   150  00FB64  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (1 bytes)
   153  00FB66  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   154  00FB68                     end_of_initialization:
   155                           	callstack 0
   156  00FB68                     __end_of__initialization:
   157                           	callstack 0
   158  00FB68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  00FB6A  6EF8               	movwf	tblptru,c
   160  00FB6C  0100               	movlb	0
   161  00FB6E  EFC8  F07E         	goto	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMRAM
   164  00003F                     __pbssCOMRAM:
   165                           	callstack 0
   166  00003F                     _led2:
   167                           	callstack 0
   168  00003F                     	ds	1
   169                           
   170                           	psect	dataCOMRAM
   171  000001                     __pdataCOMRAM:
   172                           	callstack 0
   173  000001                     _port_reg:
   174                           	callstack 0
   175  000001                     	ds	10
   176  00000B                     _lat_reg:
   177                           	callstack 0
   178  00000B                     	ds	10
   179  000015                     _tris_reg:
   180                           	callstack 0
   181  000015                     	ds	10
   182  00001F                     _led:
   183                           	callstack 0
   184  00001F                     	ds	7
   185  000026                     _button1:
   186                           	callstack 0
   187  000026                     	ds	1
   188                           
   189                           	psect	cstackCOMRAM
   190  000027                     __pcstackCOMRAM:
   191                           	callstack 0
   192  000027                     set_pin_direction@pin_num:
   193                           	callstack 0
   194  000027                     write_pin@pin_num:
   195                           	callstack 0
   196  000027                     read_pin@pin_num:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x0
   200  000027                     	ds	1
   201  000028                     ??_read_pin:
   202  000028                     set_pin_direction@direction:
   203                           	callstack 0
   204  000028                     write_pin@pin_mode:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x1
   208  000028                     	ds	1
   209  000029                     ??_set_pin_direction:
   210  000029                     ??_write_pin:
   211                           
   212                           ; 1 bytes @ 0x2
   213  000029                     	ds	5
   214  00002E                     set_pin_direction@port_name:
   215                           	callstack 0
   216  00002E                     write_pin@port_name:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x7
   220  00002E                     	ds	1
   221  00002F                     read_pin@port_name:
   222                           	callstack 0
   223  00002F                     led_init@led:
   224                           	callstack 0
   225  00002F                     led_switch_on@led:
   226                           	callstack 0
   227  00002F                     led_switch_off@led:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x8
   231  00002F                     	ds	1
   232  000030                     read_pin@val:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x9
   236  000030                     	ds	1
   237  000031                     read_button@but:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xA
   241  000031                     	ds	2
   242  000033                     read_button@status:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0xC
   246  000033                     	ds	1
   247  000034                     ??_main:
   248                           
   249                           ; 1 bytes @ 0xD
   250  000034                     	ds	2
   251  000036                     main@x:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0xF
   255  000036                     	ds	1
   256  000037                     main@i_93:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x10
   260  000037                     	ds	2
   261  000039                     main@i_94:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x12
   265  000039                     	ds	2
   266  00003B                     main@i:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x14
   270  00003B                     	ds	2
   271  00003D                     main@counter:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x16
   275  00003D                     	ds	2
   276                           
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 24 in file "application.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  i               2   18[COMRAM] int 
   287 ;;  i               2   16[COMRAM] int 
   288 ;;  i               2   20[COMRAM] int 
   289 ;;  counter         2   22[COMRAM] int 
   290 ;;  x               1   15[COMRAM] unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  2   20[None  ] int 
   293 ;; Registers used:
   294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;Total ram usage:       11 bytes
   305 ;; Hardware stack levels required when called:    2
   306 ;; This function calls:
   307 ;;		_led_init
   308 ;;		_led_switch_off
   309 ;;		_led_switch_on
   310 ;;		_read_button
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  00FD90                     __ptext0:
   318                           	callstack 0
   319  00FD90                     _main:
   320                           	callstack 29
   321  00FD90                     
   322                           ;application.c: 25:      for(int i=0;i<3;i++)
   323  00FD90  0E00               	movlw	0
   324  00FD92  6E3C               	movwf	(main@i+1)^0,c
   325  00FD94  0E00               	movlw	0
   326  00FD96  6E3B               	movwf	main@i^0,c
   327  00FD98                     l1053:
   328                           
   329                           ;application.c: 26:         {;application.c: 27:             led_init(&led[i]);
   330  00FD98  0E1F               	movlw	low _led
   331  00FD9A  243B               	addwf	main@i^0,w,c
   332  00FD9C  6E2F               	movwf	led_init@led^0,c
   333  00FD9E  0E00               	movlw	high _led
   334  00FDA0  203C               	addwfc	(main@i+1)^0,w,c
   335  00FDA2  6E30               	movwf	(led_init@led+1)^0,c
   336  00FDA4  ECB9  F07D         	call	_led_init	;wreg free
   337  00FDA8                     
   338                           ;application.c: 28:         }
   339  00FDA8  4A3B               	infsnz	main@i^0,f,c
   340  00FDAA  2A3C               	incf	(main@i+1)^0,f,c
   341  00FDAC  BE3C               	btfsc	(main@i+1)^0,7,c
   342  00FDAE  EFE2  F07E         	goto	u251
   343  00FDB2  503C               	movf	(main@i+1)^0,w,c
   344  00FDB4  E109               	bnz	u250
   345  00FDB6  0E03               	movlw	3
   346  00FDB8  5C3B               	subwf	main@i^0,w,c
   347  00FDBA  A0D8               	btfss	status,0,c
   348  00FDBC  EFE2  F07E         	goto	u251
   349  00FDC0  EFE4  F07E         	goto	u250
   350  00FDC4                     u251:
   351  00FDC4  EFCC  F07E         	goto	l1053
   352  00FDC8                     u250:
   353  00FDC8                     l1059:
   354                           
   355                           ;application.c: 29:     unsigned char x;;application.c: 30:     int counter = 1;
   356  00FDC8  0E00               	movlw	0
   357  00FDCA  6E3E               	movwf	(main@counter+1)^0,c
   358  00FDCC  0E01               	movlw	1
   359  00FDCE  6E3D               	movwf	main@counter^0,c
   360  00FDD0                     l1061:
   361                           
   362                           ;application.c: 32:     {;application.c: 33:         x = read_button(&button1);
   363  00FDD0  0E26               	movlw	low _button1
   364  00FDD2  6E31               	movwf	read_button@but^0,c
   365  00FDD4  0E00               	movlw	high _button1
   366  00FDD6  6E32               	movwf	(read_button@but+1)^0,c
   367  00FDD8  EC8F  F07D         	call	_read_button	;wreg free
   368  00FDDC  6E36               	movwf	main@x^0,c
   369  00FDDE                     
   370                           ;application.c: 34:         if(x == 0x01)
   371  00FDDE  0436               	decf	main@x^0,w,c
   372  00FDE0  A4D8               	btfss	status,2,c
   373  00FDE2  EFF5  F07E         	goto	u261
   374  00FDE6  EFF7  F07E         	goto	u260
   375  00FDEA                     u261:
   376  00FDEA  EFE8  F07E         	goto	l1061
   377  00FDEE                     u260:
   378  00FDEE                     
   379                           ;application.c: 35:         {;application.c: 36:             if(counter == 1)
   380  00FDEE  043D               	decf	main@counter^0,w,c
   381  00FDF0  103E               	iorwf	(main@counter+1)^0,w,c
   382  00FDF2  A4D8               	btfss	status,2,c
   383  00FDF4  EFFE  F07E         	goto	u271
   384  00FDF8  EF00  F07F         	goto	u270
   385  00FDFC                     u271:
   386  00FDFC  EF26  F07F         	goto	l1075
   387  00FE00                     u270:
   388  00FE00                     
   389                           ;application.c: 37:             {;application.c: 38:                     led_switch_on(&
      +                          led[0]);
   390  00FE00  0E1F               	movlw	low _led
   391  00FE02  6E2F               	movwf	led_switch_on@led^0,c
   392  00FE04  0E00               	movlw	high _led
   393  00FE06  6E30               	movwf	(led_switch_on@led+1)^0,c
   394  00FE08  EC7B  F07D         	call	_led_switch_on	;wreg free
   395  00FE0C                     
   396                           ;application.c: 39:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   397  00FE0C  0E03               	movlw	3
   398  00FE0E  6E35               	movwf	(??_main+1)^0,c
   399  00FE10  0E8A               	movlw	138
   400  00FE12  6E34               	movwf	??_main^0,c
   401  00FE14  0E56               	movlw	86
   402  00FE16                     u367:
   403  00FE16  2EE8               	decfsz	wreg,f,c
   404  00FE18  D7FE               	bra	u367
   405  00FE1A  2E34               	decfsz	??_main^0,f,c
   406  00FE1C  D7FC               	bra	u367
   407  00FE1E  2E35               	decfsz	(??_main+1)^0,f,c
   408  00FE20  D7FA               	bra	u367
   409  00FE22                     
   410                           ;application.c: 40:                     led_switch_off(&led[0]);
   411  00FE22  0E1F               	movlw	low _led
   412  00FE24  6E2F               	movwf	led_switch_off@led^0,c
   413  00FE26  0E00               	movlw	high _led
   414  00FE28  6E30               	movwf	(led_switch_off@led+1)^0,c
   415  00FE2A  EC67  F07D         	call	_led_switch_off	;wreg free
   416                           
   417                           ;application.c: 41:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   418  00FE2E  0E03               	movlw	3
   419  00FE30  6E35               	movwf	(??_main+1)^0,c
   420  00FE32  0E8A               	movlw	138
   421  00FE34  6E34               	movwf	??_main^0,c
   422  00FE36  0E56               	movlw	86
   423  00FE38                     u377:
   424  00FE38  2EE8               	decfsz	wreg,f,c
   425  00FE3A  D7FE               	bra	u377
   426  00FE3C  2E34               	decfsz	??_main^0,f,c
   427  00FE3E  D7FC               	bra	u377
   428  00FE40  2E35               	decfsz	(??_main+1)^0,f,c
   429  00FE42  D7FA               	bra	u377
   430  00FE44                     l1073:
   431                           
   432                           ;application.c: 42:                     counter++;
   433  00FE44  4A3D               	infsnz	main@counter^0,f,c
   434  00FE46  2A3E               	incf	(main@counter+1)^0,f,c
   435                           
   436                           ;application.c: 43:             }
   437  00FE48  EFE8  F07E         	goto	l1061
   438  00FE4C                     l1075:
   439  00FE4C  0E02               	movlw	2
   440  00FE4E  183D               	xorwf	main@counter^0,w,c
   441  00FE50  103E               	iorwf	(main@counter+1)^0,w,c
   442  00FE52  A4D8               	btfss	status,2,c
   443  00FE54  EF2E  F07F         	goto	u281
   444  00FE58  EF30  F07F         	goto	u280
   445  00FE5C                     u281:
   446  00FE5C  EF68  F07F         	goto	l1093
   447  00FE60                     u280:
   448  00FE60                     
   449                           ;application.c: 45:             {;application.c: 46:                 for(int i=0;i<2;i++
      +                          )
   450  00FE60  0E00               	movlw	0
   451  00FE62  6E38               	movwf	(main@i_93+1)^0,c
   452  00FE64  0E00               	movlw	0
   453  00FE66  6E37               	movwf	main@i_93^0,c
   454  00FE68                     l1083:
   455                           
   456                           ;application.c: 47:                 {;application.c: 48:                     led_switch_
      +                          on(&led[1]);
   457  00FE68  0E20               	movlw	low (_led+1)
   458  00FE6A  6E2F               	movwf	led_switch_on@led^0,c
   459  00FE6C  0E00               	movlw	high (_led+1)
   460  00FE6E  6E30               	movwf	(led_switch_on@led+1)^0,c
   461  00FE70  EC7B  F07D         	call	_led_switch_on	;wreg free
   462  00FE74                     
   463                           ;application.c: 49:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   464  00FE74  0E03               	movlw	3
   465  00FE76  6E35               	movwf	(??_main+1)^0,c
   466  00FE78  0E8A               	movlw	138
   467  00FE7A  6E34               	movwf	??_main^0,c
   468  00FE7C  0E56               	movlw	86
   469  00FE7E                     u387:
   470  00FE7E  2EE8               	decfsz	wreg,f,c
   471  00FE80  D7FE               	bra	u387
   472  00FE82  2E34               	decfsz	??_main^0,f,c
   473  00FE84  D7FC               	bra	u387
   474  00FE86  2E35               	decfsz	(??_main+1)^0,f,c
   475  00FE88  D7FA               	bra	u387
   476  00FE8A                     
   477                           ;application.c: 50:                     led_switch_off(&led[1]);
   478  00FE8A  0E20               	movlw	low (_led+1)
   479  00FE8C  6E2F               	movwf	led_switch_off@led^0,c
   480  00FE8E  0E00               	movlw	high (_led+1)
   481  00FE90  6E30               	movwf	(led_switch_off@led+1)^0,c
   482  00FE92  EC67  F07D         	call	_led_switch_off	;wreg free
   483                           
   484                           ;application.c: 51:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   485  00FE96  0E03               	movlw	3
   486  00FE98  6E35               	movwf	(??_main+1)^0,c
   487  00FE9A  0E8A               	movlw	138
   488  00FE9C  6E34               	movwf	??_main^0,c
   489  00FE9E  0E56               	movlw	86
   490  00FEA0                     u397:
   491  00FEA0  2EE8               	decfsz	wreg,f,c
   492  00FEA2  D7FE               	bra	u397
   493  00FEA4  2E34               	decfsz	??_main^0,f,c
   494  00FEA6  D7FC               	bra	u397
   495  00FEA8  2E35               	decfsz	(??_main+1)^0,f,c
   496  00FEAA  D7FA               	bra	u397
   497  00FEAC                     
   498                           ;application.c: 52:                 }
   499  00FEAC  4A37               	infsnz	main@i_93^0,f,c
   500  00FEAE  2A38               	incf	(main@i_93+1)^0,f,c
   501  00FEB0  BE38               	btfsc	(main@i_93+1)^0,7,c
   502  00FEB2  EF64  F07F         	goto	u291
   503  00FEB6  5038               	movf	(main@i_93+1)^0,w,c
   504  00FEB8  E109               	bnz	u290
   505  00FEBA  0E02               	movlw	2
   506  00FEBC  5C37               	subwf	main@i_93^0,w,c
   507  00FEBE  A0D8               	btfss	status,0,c
   508  00FEC0  EF64  F07F         	goto	u291
   509  00FEC4  EF66  F07F         	goto	u290
   510  00FEC8                     u291:
   511  00FEC8  EF34  F07F         	goto	l1083
   512  00FECC                     u290:
   513  00FECC  EF22  F07F         	goto	l1073
   514  00FED0                     l1093:
   515  00FED0  0E03               	movlw	3
   516  00FED2  183D               	xorwf	main@counter^0,w,c
   517  00FED4  103E               	iorwf	(main@counter+1)^0,w,c
   518  00FED6  A4D8               	btfss	status,2,c
   519  00FED8  EF70  F07F         	goto	u301
   520  00FEDC  EF72  F07F         	goto	u300
   521  00FEE0                     u301:
   522  00FEE0  EFAA  F07F         	goto	l1111
   523  00FEE4                     u300:
   524  00FEE4                     
   525                           ;application.c: 56:             {;application.c: 57:                      for(int i=0;i<
      +                          3;i++)
   526  00FEE4  0E00               	movlw	0
   527  00FEE6  6E3A               	movwf	(main@i_94+1)^0,c
   528  00FEE8  0E00               	movlw	0
   529  00FEEA  6E39               	movwf	main@i_94^0,c
   530  00FEEC                     l1101:
   531                           
   532                           ;application.c: 58:                 {;application.c: 59:                     led_switch_
      +                          on(&led[2]);
   533  00FEEC  0E21               	movlw	low (_led+2)
   534  00FEEE  6E2F               	movwf	led_switch_on@led^0,c
   535  00FEF0  0E00               	movlw	high (_led+2)
   536  00FEF2  6E30               	movwf	(led_switch_on@led+1)^0,c
   537  00FEF4  EC7B  F07D         	call	_led_switch_on	;wreg free
   538  00FEF8                     
   539                           ;application.c: 60:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   540  00FEF8  0E03               	movlw	3
   541  00FEFA  6E35               	movwf	(??_main+1)^0,c
   542  00FEFC  0E8A               	movlw	138
   543  00FEFE  6E34               	movwf	??_main^0,c
   544  00FF00  0E56               	movlw	86
   545  00FF02                     u407:
   546  00FF02  2EE8               	decfsz	wreg,f,c
   547  00FF04  D7FE               	bra	u407
   548  00FF06  2E34               	decfsz	??_main^0,f,c
   549  00FF08  D7FC               	bra	u407
   550  00FF0A  2E35               	decfsz	(??_main+1)^0,f,c
   551  00FF0C  D7FA               	bra	u407
   552  00FF0E                     
   553                           ;application.c: 61:                     led_switch_off(&led[2]);
   554  00FF0E  0E21               	movlw	low (_led+2)
   555  00FF10  6E2F               	movwf	led_switch_off@led^0,c
   556  00FF12  0E00               	movlw	high (_led+2)
   557  00FF14  6E30               	movwf	(led_switch_off@led+1)^0,c
   558  00FF16  EC67  F07D         	call	_led_switch_off	;wreg free
   559                           
   560                           ;application.c: 62:                     _delay((unsigned long)((250)*(8000000UL/4000.0))
      +                          );
   561  00FF1A  0E03               	movlw	3
   562  00FF1C  6E35               	movwf	(??_main+1)^0,c
   563  00FF1E  0E8A               	movlw	138
   564  00FF20  6E34               	movwf	??_main^0,c
   565  00FF22  0E56               	movlw	86
   566  00FF24                     u417:
   567  00FF24  2EE8               	decfsz	wreg,f,c
   568  00FF26  D7FE               	bra	u417
   569  00FF28  2E34               	decfsz	??_main^0,f,c
   570  00FF2A  D7FC               	bra	u417
   571  00FF2C  2E35               	decfsz	(??_main+1)^0,f,c
   572  00FF2E  D7FA               	bra	u417
   573  00FF30                     
   574                           ;application.c: 63:                 }
   575  00FF30  4A39               	infsnz	main@i_94^0,f,c
   576  00FF32  2A3A               	incf	(main@i_94+1)^0,f,c
   577  00FF34  BE3A               	btfsc	(main@i_94+1)^0,7,c
   578  00FF36  EFA6  F07F         	goto	u311
   579  00FF3A  503A               	movf	(main@i_94+1)^0,w,c
   580  00FF3C  E109               	bnz	u310
   581  00FF3E  0E03               	movlw	3
   582  00FF40  5C39               	subwf	main@i_94^0,w,c
   583  00FF42  A0D8               	btfss	status,0,c
   584  00FF44  EFA6  F07F         	goto	u311
   585  00FF48  EFA8  F07F         	goto	u310
   586  00FF4C                     u311:
   587  00FF4C  EF76  F07F         	goto	l1101
   588  00FF50                     u310:
   589  00FF50  EF22  F07F         	goto	l1073
   590  00FF54                     l1111:
   591  00FF54  0E04               	movlw	4
   592  00FF56  183D               	xorwf	main@counter^0,w,c
   593  00FF58  103E               	iorwf	(main@counter+1)^0,w,c
   594  00FF5A  A4D8               	btfss	status,2,c
   595  00FF5C  EFB2  F07F         	goto	u321
   596  00FF60  EFB4  F07F         	goto	u320
   597  00FF64                     u321:
   598  00FF64  EFD3  F07F         	goto	l1119
   599  00FF68                     u320:
   600  00FF68                     
   601                           ;application.c: 67:             {;application.c: 68:                     led_switch_on(&
      +                          led[0]);
   602  00FF68  0E1F               	movlw	low _led
   603  00FF6A  6E2F               	movwf	led_switch_on@led^0,c
   604  00FF6C  0E00               	movlw	high _led
   605  00FF6E  6E30               	movwf	(led_switch_on@led+1)^0,c
   606  00FF70  EC7B  F07D         	call	_led_switch_on	;wreg free
   607                           
   608                           ;application.c: 69:                     led_switch_on(&led[1]);
   609  00FF74  0E20               	movlw	low (_led+1)
   610  00FF76  6E2F               	movwf	led_switch_on@led^0,c
   611  00FF78  0E00               	movlw	high (_led+1)
   612  00FF7A  6E30               	movwf	(led_switch_on@led+1)^0,c
   613  00FF7C  EC7B  F07D         	call	_led_switch_on	;wreg free
   614                           
   615                           ;application.c: 70:                     led_switch_on(&led[2]);
   616  00FF80  0E21               	movlw	low (_led+2)
   617  00FF82  6E2F               	movwf	led_switch_on@led^0,c
   618  00FF84  0E00               	movlw	high (_led+2)
   619  00FF86  6E30               	movwf	(led_switch_on@led+1)^0,c
   620  00FF88  EC7B  F07D         	call	_led_switch_on	;wreg free
   621  00FF8C                     
   622                           ;application.c: 71:                     _delay((unsigned long)((500)*(8000000UL/4000.0))
      +                          );
   623  00FF8C  0E06               	movlw	6
   624  00FF8E  6E35               	movwf	(??_main+1)^0,c
   625  00FF90  0E13               	movlw	19
   626  00FF92  6E34               	movwf	??_main^0,c
   627  00FF94  0EAE               	movlw	174
   628  00FF96                     u427:
   629  00FF96  2EE8               	decfsz	wreg,f,c
   630  00FF98  D7FE               	bra	u427
   631  00FF9A  2E34               	decfsz	??_main^0,f,c
   632  00FF9C  D7FC               	bra	u427
   633  00FF9E  2E35               	decfsz	(??_main+1)^0,f,c
   634  00FFA0  D7FA               	bra	u427
   635  00FFA2  EF22  F07F         	goto	l1073
   636  00FFA6                     l1119:
   637  00FFA6  0E05               	movlw	5
   638  00FFA8  183D               	xorwf	main@counter^0,w,c
   639  00FFAA  103E               	iorwf	(main@counter+1)^0,w,c
   640  00FFAC  A4D8               	btfss	status,2,c
   641  00FFAE  EFDB  F07F         	goto	u331
   642  00FFB2  EFDD  F07F         	goto	u330
   643  00FFB6                     u331:
   644  00FFB6  EFFC  F07F         	goto	l30
   645  00FFBA                     u330:
   646  00FFBA                     
   647                           ;application.c: 75:             {;application.c: 76:                     led_switch_off(
      +                          &led[0]);
   648  00FFBA  0E1F               	movlw	low _led
   649  00FFBC  6E2F               	movwf	led_switch_off@led^0,c
   650  00FFBE  0E00               	movlw	high _led
   651  00FFC0  6E30               	movwf	(led_switch_off@led+1)^0,c
   652  00FFC2  EC67  F07D         	call	_led_switch_off	;wreg free
   653                           
   654                           ;application.c: 77:                     led_switch_off(&led[1]);
   655  00FFC6  0E20               	movlw	low (_led+1)
   656  00FFC8  6E2F               	movwf	led_switch_off@led^0,c
   657  00FFCA  0E00               	movlw	high (_led+1)
   658  00FFCC  6E30               	movwf	(led_switch_off@led+1)^0,c
   659  00FFCE  EC67  F07D         	call	_led_switch_off	;wreg free
   660                           
   661                           ;application.c: 78:                     led_switch_off(&led[2]);
   662  00FFD2  0E21               	movlw	low (_led+2)
   663  00FFD4  6E2F               	movwf	led_switch_off@led^0,c
   664  00FFD6  0E00               	movlw	high (_led+2)
   665  00FFD8  6E30               	movwf	(led_switch_off@led+1)^0,c
   666  00FFDA  EC67  F07D         	call	_led_switch_off	;wreg free
   667  00FFDE                     
   668                           ;application.c: 79:                     _delay((unsigned long)((500)*(8000000UL/4000.0))
      +                          );
   669  00FFDE  0E06               	movlw	6
   670  00FFE0  6E35               	movwf	(??_main+1)^0,c
   671  00FFE2  0E13               	movlw	19
   672  00FFE4  6E34               	movwf	??_main^0,c
   673  00FFE6  0EAE               	movlw	174
   674  00FFE8                     u437:
   675  00FFE8  2EE8               	decfsz	wreg,f,c
   676  00FFEA  D7FE               	bra	u437
   677  00FFEC  2E34               	decfsz	??_main^0,f,c
   678  00FFEE  D7FC               	bra	u437
   679  00FFF0  2E35               	decfsz	(??_main+1)^0,f,c
   680  00FFF2  D7FA               	bra	u437
   681  00FFF4  EFE4  F07E         	goto	l1059
   682  00FFF8                     l30:
   683  00FFF8  EFE8  F07E         	goto	l1061
   684  00FFFC  EF00  F000         	goto	start
   685  010000                     __end_of_main:
   686                           	callstack 0
   687                           
   688 ;; *************** function _read_button *****************
   689 ;; Defined at:
   690 ;;		line 18 in file "ecu/button/button.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  but             2   10[COMRAM] PTR struct .
   693 ;;		 -> button1(1), 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  status          1   12[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      unsigned char 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;Total ram usage:        3 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		_read_pin
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text1
   720  00FB1E                     __ptext1:
   721                           	callstack 0
   722  00FB1E                     _read_button:
   723                           	callstack 29
   724  00FB1E                     
   725                           ;ecu/button/button.c: 18: unsigned char read_button(button_t *but);ecu/button/button.c: 
      +                          19: {;ecu/button/button.c: 20:     unsigned char status;;ecu/button/button.c: 21:     st
      +                          atus = read_pin(but->port_name,but->pin_num);
   726  00FB1E  C031  FFD9         	movff	read_button@but,fsr2l
   727  00FB22  C032  FFDA         	movff	read_button@but+1,fsr2h
   728  00FB26  30DF               	rrcf	indf2,w,c
   729  00FB28  32E8               	rrcf	wreg,f,c
   730  00FB2A  32E8               	rrcf	wreg,f,c
   731  00FB2C  0B07               	andlw	7
   732  00FB2E  6E27               	movwf	read_pin@pin_num^0,c
   733  00FB30  C031  FFD9         	movff	read_button@but,fsr2l
   734  00FB34  C032  FFDA         	movff	read_button@but+1,fsr2h
   735  00FB38  50DF               	movf	indf2,w,c
   736  00FB3A  0B07               	andlw	7
   737  00FB3C  ECE0  F07D         	call	_read_pin
   738  00FB40  6E33               	movwf	read_button@status^0,c
   739  00FB42                     
   740                           ;ecu/button/button.c: 22:     return status;
   741  00FB42  5033               	movf	read_button@status^0,w,c
   742  00FB44  0012               	return		;funcret
   743  00FB46                     __end_of_read_button:
   744                           	callstack 0
   745                           
   746 ;; *************** function _read_pin *****************
   747 ;; Defined at:
   748 ;;		line 69 in file "mcal/mcal_gpio.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  port_name       1    wreg     enum E2695
   751 ;;  pin_num         1    0[COMRAM] enum E2685
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  port_name       1    8[COMRAM] enum E2695
   754 ;;  val             1    9[COMRAM] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      unsigned char 
   757 ;; Registers used:
   758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   764 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;Total ram usage:       10 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_read_button
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text2
   778  00FBC0                     __ptext2:
   779                           	callstack 0
   780  00FBC0                     _read_pin:
   781                           	callstack 29
   782                           
   783                           ;incstack = 0
   784                           ;read_pin@port_name stored from wreg
   785  00FBC0  6E2F               	movwf	read_pin@port_name^0,c
   786  00FBC2                     
   787                           ;mcal/mcal_gpio.c: 69: unsigned char read_pin(port_name_t port_name,pins_num_t pin_num);
      +                          mcal/mcal_gpio.c: 70: {;mcal/mcal_gpio.c: 71:     unsigned char val;;mcal/mcal_gpio.c: 7
      +                          2:     val = ((*port_reg[port_name]&(1<<pin_num))>>pin_num);
   788  00FBC2  C027  F028         	movff	read_pin@pin_num,??_read_pin
   789  00FBC6  502F               	movf	read_pin@port_name^0,w,c
   790  00FBC8  0D02               	mullw	2
   791  00FBCA  0E01               	movlw	low _port_reg
   792  00FBCC  24F3               	addwf	243,w,c
   793  00FBCE  6ED9               	movwf	fsr2l,c
   794  00FBD0  0E00               	movlw	high _port_reg
   795  00FBD2  20F4               	addwfc	prodh,w,c
   796  00FBD4  6EDA               	movwf	fsr2h,c
   797  00FBD6  CFDE F029          	movff	postinc2,??_read_pin+1
   798  00FBDA  CFDD F02A          	movff	postdec2,??_read_pin+2
   799  00FBDE  C029  FFD9         	movff	??_read_pin+1,fsr2l
   800  00FBE2  C02A  FFDA         	movff	??_read_pin+2,fsr2h
   801  00FBE6  50DF               	movf	indf2,w,c
   802  00FBE8  6E2B               	movwf	(??_read_pin+3)^0,c
   803  00FBEA  C027  F02C         	movff	read_pin@pin_num,??_read_pin+4
   804  00FBEE  0E01               	movlw	1
   805  00FBF0  6E2D               	movwf	(??_read_pin+5)^0,c
   806  00FBF2  2A2C               	incf	(??_read_pin+4)^0,f,c
   807  00FBF4  EFFE  F07D         	goto	u234
   808  00FBF8                     u235:
   809  00FBF8  90D8               	bcf	status,0,c
   810  00FBFA  362D               	rlcf	(??_read_pin+5)^0,f,c
   811  00FBFC                     u234:
   812  00FBFC  2E2C               	decfsz	(??_read_pin+4)^0,f,c
   813  00FBFE  EFFC  F07D         	goto	u235
   814  00FC02  502D               	movf	(??_read_pin+5)^0,w,c
   815  00FC04  142B               	andwf	(??_read_pin+3)^0,w,c
   816  00FC06  6E2E               	movwf	(??_read_pin+6)^0,c
   817  00FC08  2A28               	incf	??_read_pin^0,f,c
   818  00FC0A  EF09  F07E         	goto	u244
   819  00FC0E                     u245:
   820  00FC0E  90D8               	bcf	status,0,c
   821  00FC10  322E               	rrcf	(??_read_pin+6)^0,f,c
   822  00FC12                     u244:
   823  00FC12  2E28               	decfsz	??_read_pin^0,f,c
   824  00FC14  EF07  F07E         	goto	u245
   825  00FC18  502E               	movf	(??_read_pin+6)^0,w,c
   826  00FC1A  6E30               	movwf	read_pin@val^0,c
   827  00FC1C                     
   828                           ;mcal/mcal_gpio.c: 73:     return val;
   829  00FC1C  5030               	movf	read_pin@val^0,w,c
   830  00FC1E  0012               	return		;funcret
   831  00FC20                     __end_of_read_pin:
   832                           	callstack 0
   833                           
   834 ;; *************** function _led_switch_on *****************
   835 ;; Defined at:
   836 ;;		line 19 in file "ecu/led_files/led.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  led             2    8[COMRAM] PTR struct .
   839 ;;		 -> led(7), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:        2 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    1
   858 ;; This function calls:
   859 ;;		_write_pin
   860 ;; This function is called by:
   861 ;;		_main
   862 ;;		_led_seq
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text3
   867  00FAF6                     __ptext3:
   868                           	callstack 0
   869  00FAF6                     _led_switch_on:
   870                           	callstack 29
   871  00FAF6                     
   872                           ;ecu/led_files/led.c: 19: void led_switch_on(led_t *led);ecu/led_files/led.c: 20: {;ecu/
      +                          led_files/led.c: 21:     write_pin(led->port_name,led->pin_num,high);
   873  00FAF6  C02F  FFD9         	movff	led_switch_on@led,fsr2l
   874  00FAFA  C030  FFDA         	movff	led_switch_on@led+1,fsr2h
   875  00FAFE  30DF               	rrcf	indf2,w,c
   876  00FB00  32E8               	rrcf	wreg,f,c
   877  00FB02  32E8               	rrcf	wreg,f,c
   878  00FB04  0B07               	andlw	7
   879  00FB06  6E27               	movwf	write_pin@pin_num^0,c
   880  00FB08  0E01               	movlw	1
   881  00FB0A  6E28               	movwf	write_pin@pin_mode^0,c
   882  00FB0C  C02F  FFD9         	movff	led_switch_on@led,fsr2l
   883  00FB10  C030  FFDA         	movff	led_switch_on@led+1,fsr2h
   884  00FB14  50DF               	movf	indf2,w,c
   885  00FB16  0B07               	andlw	7
   886  00FB18  EC6C  F07E         	call	_write_pin
   887  00FB1C  0012               	return		;funcret
   888  00FB1E                     __end_of_led_switch_on:
   889                           	callstack 0
   890                           
   891 ;; *************** function _led_switch_off *****************
   892 ;; Defined at:
   893 ;;		line 29 in file "ecu/led_files/led.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  led             2    8[COMRAM] PTR struct .
   896 ;;		 -> led(7), 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        2 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_write_pin
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  00FACE                     __ptext4:
   924                           	callstack 0
   925  00FACE                     _led_switch_off:
   926                           	callstack 29
   927  00FACE                     
   928                           ;ecu/led_files/led.c: 29: void led_switch_off(led_t *led);ecu/led_files/led.c: 30: {;ecu
      +                          /led_files/led.c: 31:     write_pin(led->port_name,led->pin_num,low);
   929  00FACE  C02F  FFD9         	movff	led_switch_off@led,fsr2l
   930  00FAD2  C030  FFDA         	movff	led_switch_off@led+1,fsr2h
   931  00FAD6  30DF               	rrcf	indf2,w,c
   932  00FAD8  32E8               	rrcf	wreg,f,c
   933  00FADA  32E8               	rrcf	wreg,f,c
   934  00FADC  0B07               	andlw	7
   935  00FADE  6E27               	movwf	write_pin@pin_num^0,c
   936  00FAE0  0E00               	movlw	0
   937  00FAE2  6E28               	movwf	write_pin@pin_mode^0,c
   938  00FAE4  C02F  FFD9         	movff	led_switch_off@led,fsr2l
   939  00FAE8  C030  FFDA         	movff	led_switch_off@led+1,fsr2h
   940  00FAEC  50DF               	movf	indf2,w,c
   941  00FAEE  0B07               	andlw	7
   942  00FAF0  EC6C  F07E         	call	_write_pin
   943  00FAF4  0012               	return		;funcret
   944  00FAF6                     __end_of_led_switch_off:
   945                           	callstack 0
   946                           
   947 ;; *************** function _led_init *****************
   948 ;; Defined at:
   949 ;;		line 8 in file "ecu/led_files/led.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  led             2    8[COMRAM] PTR struct .
   952 ;;		 -> led(7), 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		_set_pin_direction
   973 ;;		_write_pin
   974 ;; This function is called by:
   975 ;;		_main
   976 ;;		_led_seq
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text5
   981  00FB72                     __ptext5:
   982                           	callstack 0
   983  00FB72                     _led_init:
   984                           	callstack 29
   985  00FB72                     
   986                           ;ecu/led_files/led.c: 8: void led_init(led_t *led);ecu/led_files/led.c: 9: {;ecu/led_fil
      +                          es/led.c: 10:     set_pin_direction(led->port_name,led->pin_num,direction_output);
   987  00FB72  C02F  FFD9         	movff	led_init@led,fsr2l
   988  00FB76  C030  FFDA         	movff	led_init@led+1,fsr2h
   989  00FB7A  30DF               	rrcf	indf2,w,c
   990  00FB7C  32E8               	rrcf	wreg,f,c
   991  00FB7E  32E8               	rrcf	wreg,f,c
   992  00FB80  0B07               	andlw	7
   993  00FB82  6E27               	movwf	set_pin_direction@pin_num^0,c
   994  00FB84  0E00               	movlw	0
   995  00FB86  6E28               	movwf	set_pin_direction@direction^0,c
   996  00FB88  C02F  FFD9         	movff	led_init@led,fsr2l
   997  00FB8C  C030  FFDA         	movff	led_init@led+1,fsr2h
   998  00FB90  50DF               	movf	indf2,w,c
   999  00FB92  0B07               	andlw	7
  1000  00FB94  EC10  F07E         	call	_set_pin_direction
  1001                           
  1002                           ;ecu/led_files/led.c: 11:     write_pin(led->port_name,led->pin_num,low);
  1003  00FB98  C02F  FFD9         	movff	led_init@led,fsr2l
  1004  00FB9C  C030  FFDA         	movff	led_init@led+1,fsr2h
  1005  00FBA0  30DF               	rrcf	indf2,w,c
  1006  00FBA2  32E8               	rrcf	wreg,f,c
  1007  00FBA4  32E8               	rrcf	wreg,f,c
  1008  00FBA6  0B07               	andlw	7
  1009  00FBA8  6E27               	movwf	write_pin@pin_num^0,c
  1010  00FBAA  0E00               	movlw	0
  1011  00FBAC  6E28               	movwf	write_pin@pin_mode^0,c
  1012  00FBAE  C02F  FFD9         	movff	led_init@led,fsr2l
  1013  00FBB2  C030  FFDA         	movff	led_init@led+1,fsr2h
  1014  00FBB6  50DF               	movf	indf2,w,c
  1015  00FBB8  0B07               	andlw	7
  1016  00FBBA  EC6C  F07E         	call	_write_pin
  1017  00FBBE  0012               	return		;funcret
  1018  00FBC0                     __end_of_led_init:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _write_pin *****************
  1022 ;; Defined at:
  1023 ;;		line 37 in file "mcal/mcal_gpio.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  port_name       1    wreg     enum E2695
  1026 ;;  pin_num         1    0[COMRAM] enum E2685
  1027 ;;  pin_mode        1    1[COMRAM] enum E2702
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  port_name       1    7[COMRAM] enum E2695
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        8 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_led_init
  1049 ;;		_led_switch_on
  1050 ;;		_led_switch_off
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text6
  1055  00FCD8                     __ptext6:
  1056                           	callstack 0
  1057  00FCD8                     _write_pin:
  1058                           	callstack 29
  1059                           
  1060                           ;incstack = 0
  1061                           ;write_pin@port_name stored from wreg
  1062  00FCD8  6E2E               	movwf	write_pin@port_name^0,c
  1063  00FCDA                     
  1064                           ;mcal/mcal_gpio.c: 37: void write_pin(port_name_t port_name,pins_num_t pin_num,pin_mode_
      +                          t pin_mode);mcal/mcal_gpio.c: 38: {;mcal/mcal_gpio.c: 39:     switch(pin_mode)
  1065  00FCDA  EFB2  F07E         	goto	l1023
  1066  00FCDE                     l1017:
  1067                           
  1068                           ;mcal/mcal_gpio.c: 42:             (*lat_reg[port_name]&= (~(1<<pin_num)));
  1069  00FCDE  C027  F029         	movff	write_pin@pin_num,??_write_pin
  1070  00FCE2  0E01               	movlw	1
  1071  00FCE4  6E2A               	movwf	(??_write_pin+1)^0,c
  1072  00FCE6  2A29               	incf	??_write_pin^0,f,c
  1073  00FCE8  EF78  F07E         	goto	u214
  1074  00FCEC                     u215:
  1075  00FCEC  90D8               	bcf	status,0,c
  1076  00FCEE  362A               	rlcf	(??_write_pin+1)^0,f,c
  1077  00FCF0                     u214:
  1078  00FCF0  2E29               	decfsz	??_write_pin^0,f,c
  1079  00FCF2  EF76  F07E         	goto	u215
  1080  00FCF6  502A               	movf	(??_write_pin+1)^0,w,c
  1081  00FCF8  0AFF               	xorlw	255
  1082  00FCFA  6E2B               	movwf	(??_write_pin+2)^0,c
  1083  00FCFC  502E               	movf	write_pin@port_name^0,w,c
  1084  00FCFE  0D02               	mullw	2
  1085  00FD00  0E0B               	movlw	low _lat_reg
  1086  00FD02  24F3               	addwf	243,w,c
  1087  00FD04  6ED9               	movwf	fsr2l,c
  1088  00FD06  0E00               	movlw	high _lat_reg
  1089  00FD08  20F4               	addwfc	prodh,w,c
  1090  00FD0A  6EDA               	movwf	fsr2h,c
  1091  00FD0C  CFDE F02C          	movff	postinc2,??_write_pin+3
  1092  00FD10  CFDD F02D          	movff	postdec2,??_write_pin+4
  1093  00FD14  C02C  FFD9         	movff	??_write_pin+3,fsr2l
  1094  00FD18  C02D  FFDA         	movff	??_write_pin+4,fsr2h
  1095  00FD1C  502B               	movf	(??_write_pin+2)^0,w,c
  1096  00FD1E  16DF               	andwf	indf2,f,c
  1097                           
  1098                           ;mcal/mcal_gpio.c: 43:             break;
  1099  00FD20  EFC7  F07E         	goto	l99
  1100  00FD24                     l1019:
  1101                           
  1102                           ;mcal/mcal_gpio.c: 45:             (*lat_reg[port_name]|=(1<<pin_num));
  1103  00FD24  C027  F029         	movff	write_pin@pin_num,??_write_pin
  1104  00FD28  0E01               	movlw	1
  1105  00FD2A  6E2A               	movwf	(??_write_pin+1)^0,c
  1106  00FD2C  2A29               	incf	??_write_pin^0,f,c
  1107  00FD2E  EF9B  F07E         	goto	u224
  1108  00FD32                     u225:
  1109  00FD32  90D8               	bcf	status,0,c
  1110  00FD34  362A               	rlcf	(??_write_pin+1)^0,f,c
  1111  00FD36                     u224:
  1112  00FD36  2E29               	decfsz	??_write_pin^0,f,c
  1113  00FD38  EF99  F07E         	goto	u225
  1114  00FD3C  502E               	movf	write_pin@port_name^0,w,c
  1115  00FD3E  0D02               	mullw	2
  1116  00FD40  0E0B               	movlw	low _lat_reg
  1117  00FD42  24F3               	addwf	243,w,c
  1118  00FD44  6ED9               	movwf	fsr2l,c
  1119  00FD46  0E00               	movlw	high _lat_reg
  1120  00FD48  20F4               	addwfc	prodh,w,c
  1121  00FD4A  6EDA               	movwf	fsr2h,c
  1122  00FD4C  CFDE F02B          	movff	postinc2,??_write_pin+2
  1123  00FD50  CFDD F02C          	movff	postdec2,??_write_pin+3
  1124  00FD54  C02B  FFD9         	movff	??_write_pin+2,fsr2l
  1125  00FD58  C02C  FFDA         	movff	??_write_pin+3,fsr2h
  1126  00FD5C  502A               	movf	(??_write_pin+1)^0,w,c
  1127  00FD5E  12DF               	iorwf	indf2,f,c
  1128                           
  1129                           ;mcal/mcal_gpio.c: 46:             break;
  1130  00FD60  EFC7  F07E         	goto	l99
  1131  00FD64                     l1023:
  1132  00FD64  5028               	movf	write_pin@pin_mode^0,w,c
  1133  00FD66  6E29               	movwf	??_write_pin^0,c
  1134  00FD68  6A2A               	clrf	(??_write_pin+1)^0,c
  1135                           
  1136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 1, Range of values is 0 to 0
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            4     3 (average)
  1142                           ;	Chosen strategy is simple_byte
  1143  00FD6A  502A               	movf	(??_write_pin+1)^0,w,c
  1144  00FD6C  0A00               	xorlw	0	; case 0
  1145  00FD6E  B4D8               	btfsc	status,2,c
  1146  00FD70  EFBC  F07E         	goto	l1167
  1147  00FD74  EFC7  F07E         	goto	l99
  1148  00FD78                     l1167:
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 2, Range of values is 0 to 1
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            7     4 (average)
  1155                           ;	Chosen strategy is simple_byte
  1156  00FD78  5029               	movf	??_write_pin^0,w,c
  1157  00FD7A  0A00               	xorlw	0	; case 0
  1158  00FD7C  B4D8               	btfsc	status,2,c
  1159  00FD7E  EF6F  F07E         	goto	l1017
  1160  00FD82  0A01               	xorlw	1	; case 1
  1161  00FD84  B4D8               	btfsc	status,2,c
  1162  00FD86  EF92  F07E         	goto	l1019
  1163  00FD8A  EFC7  F07E         	goto	l99
  1164  00FD8E                     l99:
  1165  00FD8E  0012               	return		;funcret
  1166  00FD90                     __end_of_write_pin:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _set_pin_direction *****************
  1170 ;; Defined at:
  1171 ;;		line 15 in file "mcal/mcal_gpio.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  port_name       1    wreg     enum E2695
  1174 ;;  pin_num         1    0[COMRAM] enum E2685
  1175 ;;  direction       1    1[COMRAM] enum E2681
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  port_name       1    7[COMRAM] enum E2695
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        8 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_led_init
  1197 ;;		_button_init
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text7
  1202  00FC20                     __ptext7:
  1203                           	callstack 0
  1204  00FC20                     _set_pin_direction:
  1205                           	callstack 29
  1206                           
  1207                           ;incstack = 0
  1208                           ;set_pin_direction@port_name stored from wreg
  1209  00FC20  6E2E               	movwf	set_pin_direction@port_name^0,c
  1210  00FC22                     
  1211                           ;mcal/mcal_gpio.c: 15: void set_pin_direction(port_name_t port_name,pins_num_t pin_num,d
      +                          irection_t direction);mcal/mcal_gpio.c: 16: {;mcal/mcal_gpio.c: 17:     switch(direction
      +                          )
  1212  00FC22  EF56  F07E         	goto	l1009
  1213  00FC26                     l1003:
  1214                           
  1215                           ;mcal/mcal_gpio.c: 20:             (*tris_reg[port_name]&= (~(1<<pin_num)));
  1216  00FC26  C027  F029         	movff	set_pin_direction@pin_num,??_set_pin_direction
  1217  00FC2A  0E01               	movlw	1
  1218  00FC2C  6E2A               	movwf	(??_set_pin_direction+1)^0,c
  1219  00FC2E  2A29               	incf	??_set_pin_direction^0,f,c
  1220  00FC30  EF1C  F07E         	goto	u194
  1221  00FC34                     u195:
  1222  00FC34  90D8               	bcf	status,0,c
  1223  00FC36  362A               	rlcf	(??_set_pin_direction+1)^0,f,c
  1224  00FC38                     u194:
  1225  00FC38  2E29               	decfsz	??_set_pin_direction^0,f,c
  1226  00FC3A  EF1A  F07E         	goto	u195
  1227  00FC3E  502A               	movf	(??_set_pin_direction+1)^0,w,c
  1228  00FC40  0AFF               	xorlw	255
  1229  00FC42  6E2B               	movwf	(??_set_pin_direction+2)^0,c
  1230  00FC44  502E               	movf	set_pin_direction@port_name^0,w,c
  1231  00FC46  0D02               	mullw	2
  1232  00FC48  0E15               	movlw	low _tris_reg
  1233  00FC4A  24F3               	addwf	243,w,c
  1234  00FC4C  6ED9               	movwf	fsr2l,c
  1235  00FC4E  0E00               	movlw	high _tris_reg
  1236  00FC50  20F4               	addwfc	prodh,w,c
  1237  00FC52  6EDA               	movwf	fsr2h,c
  1238  00FC54  CFDE F02C          	movff	postinc2,??_set_pin_direction+3
  1239  00FC58  CFDD F02D          	movff	postdec2,??_set_pin_direction+4
  1240  00FC5C  C02C  FFD9         	movff	??_set_pin_direction+3,fsr2l
  1241  00FC60  C02D  FFDA         	movff	??_set_pin_direction+4,fsr2h
  1242  00FC64  502B               	movf	(??_set_pin_direction+2)^0,w,c
  1243  00FC66  16DF               	andwf	indf2,f,c
  1244                           
  1245                           ;mcal/mcal_gpio.c: 21:             break;
  1246  00FC68  EF6B  F07E         	goto	l91
  1247  00FC6C                     l1005:
  1248                           
  1249                           ;mcal/mcal_gpio.c: 23:             (*tris_reg[port_name]|=(1<<pin_num));
  1250  00FC6C  C027  F029         	movff	set_pin_direction@pin_num,??_set_pin_direction
  1251  00FC70  0E01               	movlw	1
  1252  00FC72  6E2A               	movwf	(??_set_pin_direction+1)^0,c
  1253  00FC74  2A29               	incf	??_set_pin_direction^0,f,c
  1254  00FC76  EF3F  F07E         	goto	u204
  1255  00FC7A                     u205:
  1256  00FC7A  90D8               	bcf	status,0,c
  1257  00FC7C  362A               	rlcf	(??_set_pin_direction+1)^0,f,c
  1258  00FC7E                     u204:
  1259  00FC7E  2E29               	decfsz	??_set_pin_direction^0,f,c
  1260  00FC80  EF3D  F07E         	goto	u205
  1261  00FC84  502E               	movf	set_pin_direction@port_name^0,w,c
  1262  00FC86  0D02               	mullw	2
  1263  00FC88  0E15               	movlw	low _tris_reg
  1264  00FC8A  24F3               	addwf	243,w,c
  1265  00FC8C  6ED9               	movwf	fsr2l,c
  1266  00FC8E  0E00               	movlw	high _tris_reg
  1267  00FC90  20F4               	addwfc	prodh,w,c
  1268  00FC92  6EDA               	movwf	fsr2h,c
  1269  00FC94  CFDE F02B          	movff	postinc2,??_set_pin_direction+2
  1270  00FC98  CFDD F02C          	movff	postdec2,??_set_pin_direction+3
  1271  00FC9C  C02B  FFD9         	movff	??_set_pin_direction+2,fsr2l
  1272  00FCA0  C02C  FFDA         	movff	??_set_pin_direction+3,fsr2h
  1273  00FCA4  502A               	movf	(??_set_pin_direction+1)^0,w,c
  1274  00FCA6  12DF               	iorwf	indf2,f,c
  1275                           
  1276                           ;mcal/mcal_gpio.c: 24:             break;
  1277  00FCA8  EF6B  F07E         	goto	l91
  1278  00FCAC                     l1009:
  1279  00FCAC  5028               	movf	set_pin_direction@direction^0,w,c
  1280  00FCAE  6E29               	movwf	??_set_pin_direction^0,c
  1281  00FCB0  6A2A               	clrf	(??_set_pin_direction+1)^0,c
  1282                           
  1283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 1, Range of values is 0 to 0
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte            4     3 (average)
  1289                           ;	Chosen strategy is simple_byte
  1290  00FCB2  502A               	movf	(??_set_pin_direction+1)^0,w,c
  1291  00FCB4  0A00               	xorlw	0	; case 0
  1292  00FCB6  B4D8               	btfsc	status,2,c
  1293  00FCB8  EF60  F07E         	goto	l1169
  1294  00FCBC  EF6B  F07E         	goto	l91
  1295  00FCC0                     l1169:
  1296                           
  1297                           ; Switch size 1, requested type "simple"
  1298                           ; Number of cases is 2, Range of values is 0 to 1
  1299                           ; switch strategies available:
  1300                           ; Name         Instructions Cycles
  1301                           ; simple_byte            7     4 (average)
  1302                           ;	Chosen strategy is simple_byte
  1303  00FCC0  5029               	movf	??_set_pin_direction^0,w,c
  1304  00FCC2  0A00               	xorlw	0	; case 0
  1305  00FCC4  B4D8               	btfsc	status,2,c
  1306  00FCC6  EF13  F07E         	goto	l1003
  1307  00FCCA  0A01               	xorlw	1	; case 1
  1308  00FCCC  B4D8               	btfsc	status,2,c
  1309  00FCCE  EF36  F07E         	goto	l1005
  1310  00FCD2  EF6B  F07E         	goto	l91
  1311  00FCD6                     l91:
  1312  00FCD6  0012               	return		;funcret
  1313  00FCD8                     __end_of_set_pin_direction:
  1314                           	callstack 0
  1315  0000                     
  1316                           	psect	rparam
  1317  0000                     
  1318                           	psect	idloc
  1319                           
  1320                           ;Config register IDLOC0 @ 0x200000
  1321                           ;	unspecified, using default values
  1322  200000                     	org	2097152
  1323  200000  FF                 	db	255
  1324                           
  1325                           ;Config register IDLOC1 @ 0x200001
  1326                           ;	unspecified, using default values
  1327  200001                     	org	2097153
  1328  200001  FF                 	db	255
  1329                           
  1330                           ;Config register IDLOC2 @ 0x200002
  1331                           ;	unspecified, using default values
  1332  200002                     	org	2097154
  1333  200002  FF                 	db	255
  1334                           
  1335                           ;Config register IDLOC3 @ 0x200003
  1336                           ;	unspecified, using default values
  1337  200003                     	org	2097155
  1338  200003  FF                 	db	255
  1339                           
  1340                           ;Config register IDLOC4 @ 0x200004
  1341                           ;	unspecified, using default values
  1342  200004                     	org	2097156
  1343  200004  FF                 	db	255
  1344                           
  1345                           ;Config register IDLOC5 @ 0x200005
  1346                           ;	unspecified, using default values
  1347  200005                     	org	2097157
  1348  200005  FF                 	db	255
  1349                           
  1350                           ;Config register IDLOC6 @ 0x200006
  1351                           ;	unspecified, using default values
  1352  200006                     	org	2097158
  1353  200006  FF                 	db	255
  1354                           
  1355                           ;Config register IDLOC7 @ 0x200007
  1356                           ;	unspecified, using default values
  1357  200007                     	org	2097159
  1358  200007  FF                 	db	255
  1359                           
  1360                           	psect	config
  1361                           
  1362                           ; Padding undefined space
  1363  300000                     	org	3145728
  1364  300000  FF                 	db	255
  1365                           
  1366                           ;Config register CONFIG1H @ 0x300001
  1367                           ;	Oscillator Selection bits
  1368                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  1369                           ;	Fail-Safe Clock Monitor Enable bit
  1370                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1371                           ;	Internal/External Oscillator Switchover bit
  1372                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1373  300001                     	org	3145729
  1374  300001  07                 	db	7
  1375                           
  1376                           ;Config register CONFIG2L @ 0x300002
  1377                           ;	Power-up Timer Enable bit
  1378                           ;	PWRT = OFF, PWRT disabled
  1379                           ;	Brown-out Reset Enable bits
  1380                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1381                           ;	Brown Out Reset Voltage bits
  1382                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1383  300002                     	org	3145730
  1384  300002  1F                 	db	31
  1385                           
  1386                           ;Config register CONFIG2H @ 0x300003
  1387                           ;	Watchdog Timer Enable bit
  1388                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  1389                           ;	Watchdog Timer Postscale Select bits
  1390                           ;	WDTPS = 32768, 1:32768
  1391  300003                     	org	3145731
  1392  300003  1F                 	db	31
  1393                           
  1394                           ; Padding undefined space
  1395  300004                     	org	3145732
  1396  300004  FF                 	db	255
  1397                           
  1398                           ;Config register CONFIG3H @ 0x300005
  1399                           ;	CCP2 MUX bit
  1400                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1401                           ;	PORTB A/D Enable bit
  1402                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1403                           ;	Low-Power Timer1 Oscillator Enable bit
  1404                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1405                           ;	HFINTOSC Fast Start-up
  1406                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1407                           ;	MCLR Pin Enable bit
  1408                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1409  300005                     	org	3145733
  1410  300005  8B                 	db	139
  1411                           
  1412                           ;Config register CONFIG4L @ 0x300006
  1413                           ;	Stack Full/Underflow Reset Enable bit
  1414                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1415                           ;	Single-Supply ICSP Enable bit
  1416                           ;	LVP = ON, Single-Supply ICSP enabled
  1417                           ;	Extended Instruction Set Enable bit
  1418                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1419                           ;	Background Debugger Enable bit
  1420                           ;	DEBUG = 0x1, unprogrammed default
  1421  300006                     	org	3145734
  1422  300006  85                 	db	133
  1423                           
  1424                           ; Padding undefined space
  1425  300007                     	org	3145735
  1426  300007  FF                 	db	255
  1427                           
  1428                           ;Config register CONFIG5L @ 0x300008
  1429                           ;	Code Protection Block 0
  1430                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1431                           ;	Code Protection Block 1
  1432                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1433                           ;	Code Protection Block 2
  1434                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1435                           ;	Code Protection Block 3
  1436                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1437  300008                     	org	3145736
  1438  300008  0F                 	db	15
  1439                           
  1440                           ;Config register CONFIG5H @ 0x300009
  1441                           ;	Boot Block Code Protection bit
  1442                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1443                           ;	Data EEPROM Code Protection bit
  1444                           ;	CPD = OFF, Data EEPROM not code-protected
  1445  300009                     	org	3145737
  1446  300009  C0                 	db	192
  1447                           
  1448                           ;Config register CONFIG6L @ 0x30000A
  1449                           ;	Write Protection Block 0
  1450                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1451                           ;	Write Protection Block 1
  1452                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1453                           ;	Write Protection Block 2
  1454                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1455                           ;	Write Protection Block 3
  1456                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1457  30000A                     	org	3145738
  1458  30000A  0F                 	db	15
  1459                           
  1460                           ;Config register CONFIG6H @ 0x30000B
  1461                           ;	Configuration Register Write Protection bit
  1462                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1463                           ;	Boot Block Write Protection bit
  1464                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1465                           ;	Data EEPROM Write Protection bit
  1466                           ;	WRTD = OFF, Data EEPROM not write-protected
  1467  30000B                     	org	3145739
  1468  30000B  E0                 	db	224
  1469                           
  1470                           ;Config register CONFIG7L @ 0x30000C
  1471                           ;	Table Read Protection Block 0
  1472                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1473                           ;	Table Read Protection Block 1
  1474                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1475                           ;	Table Read Protection Block 2
  1476                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1477                           ;	Table Read Protection Block 3
  1478                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1479  30000C                     	org	3145740
  1480  30000C  0F                 	db	15
  1481                           
  1482                           ;Config register CONFIG7H @ 0x30000D
  1483                           ;	Boot Block Table Read Protection bit
  1484                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1485  30000D                     	org	3145741
  1486  30000D  40                 	db	64
  1487                           tosu	equ	0xFFF
  1488                           tosh	equ	0xFFE
  1489                           tosl	equ	0xFFD
  1490                           stkptr	equ	0xFFC
  1491                           pclatu	equ	0xFFB
  1492                           pclath	equ	0xFFA
  1493                           pcl	equ	0xFF9
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           indf0	equ	0xFEF
  1501                           postinc0	equ	0xFEE
  1502                           postdec0	equ	0xFED
  1503                           preinc0	equ	0xFEC
  1504                           plusw0	equ	0xFEB
  1505                           fsr0h	equ	0xFEA
  1506                           fsr0l	equ	0xFE9
  1507                           wreg	equ	0xFE8
  1508                           indf1	equ	0xFE7
  1509                           postinc1	equ	0xFE6
  1510                           postdec1	equ	0xFE5
  1511                           preinc1	equ	0xFE4
  1512                           plusw1	equ	0xFE3
  1513                           fsr1h	equ	0xFE2
  1514                           fsr1l	equ	0xFE1
  1515                           bsr	equ	0xFE0
  1516                           indf2	equ	0xFDF
  1517                           postinc2	equ	0xFDE
  1518                           postdec2	equ	0xFDD
  1519                           preinc2	equ	0xFDC
  1520                           plusw2	equ	0xFDB
  1521                           fsr2h	equ	0xFDA
  1522                           fsr2l	equ	0xFD9
  1523                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    read_button@but	PTR struct . size(2) Largest target is 1
		 -> button1(COMRAM[1]), 

    led_switch_off@led	PTR struct . size(2) Largest target is 7
		 -> led(COMRAM[7]), 

    led_switch_on@led	PTR struct . size(2) Largest target is 7
		 -> led(COMRAM[7]), 

    led_init@led	PTR struct . size(2) Largest target is 7
		 -> led(COMRAM[7]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_read_button
    _read_button->_read_pin
    _led_switch_on->_write_pin
    _led_switch_off->_write_pin
    _led_init->_set_pin_direction
    _led_init->_write_pin

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4111
                                             13 COMRAM    11    11      0
                           _led_init
                     _led_switch_off
                      _led_switch_on
                        _read_button
 ---------------------------------------------------------------------------------
 (1) _read_button                                          3     1      2     308
                                             10 COMRAM     3     1      2
                           _read_pin
 ---------------------------------------------------------------------------------
 (2) _read_pin                                            10     9      1     165
                                              0 COMRAM    10     9      1
 ---------------------------------------------------------------------------------
 (1) _led_switch_on                                        2     0      2    1218
                                              8 COMRAM     2     0      2
                          _write_pin
 ---------------------------------------------------------------------------------
 (1) _led_switch_off                                       2     0      2    1066
                                              8 COMRAM     2     0      2
                          _write_pin
 ---------------------------------------------------------------------------------
 (1) _led_init                                             2     0      2    1220
                                              8 COMRAM     2     0      2
                  _set_pin_direction
                          _write_pin
 ---------------------------------------------------------------------------------
 (2) _write_pin                                            8     6      2     566
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _set_pin_direction                                    8     6      2     414
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_init
     _set_pin_direction
     _write_pin
   _led_switch_off
     _write_pin
   _led_switch_on
     _write_pin
   _read_button
     _read_pin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      3F       1       66.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      32        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 25 19:56:40 2020

                        l30 FFF8                          l91 FCD6                          l99 FD8E  
                       l105 FC1E                         l132 FAF4                         l126 FBBE  
                       l129 FB1C                         l145 FB44                         u204 FC7E  
                       u300 FEE4                         u205 FC7A                         u301 FEE0  
                       u214 FCF0                         u310 FF50                         u215 FCEC  
                       u311 FF4C                         u224 FD36                         u320 FF68  
                       u225 FD32                         u321 FF64                         u234 FBFC  
                       u330 FFBA                         u250 FDC8                         u235 FBF8  
                       u331 FFB6                         u251 FDC4                         u244 FC12  
                       u260 FDEE                         u245 FC0E                         u261 FDEA  
                       u270 FE00                         u407 FF02                         u271 FDFC  
                       u280 FE60                         u417 FF24                         u281 FE5C  
                       u194 FC38                         u290 FECC                         u195 FC34  
                       u427 FF96                         u291 FEC8                         u437 FFE8  
                       u367 FE16                         u377 FE38                         u387 FE7E  
                       u397 FEA0                         _led 001F                         prod 000FF3  
                       wreg 000FE8                        l1001 FC22                        l1003 FC26  
                      l1005 FC6C                        l1101 FEEC                        l1023 FD64  
                      l1015 FCDA                        l1031 FC1C                        l1103 FEF8  
                      l1111 FF54                        l1009 FCAC                        l1017 FCDE  
                      l1121 FFBA                        l1113 FF68                        l1105 FF0E  
                      l1019 FD24                        l1035 FB72                        l1043 FAF6  
                      l1123 FFDE                        l1115 FF8C                        l1107 FF30  
                      l1045 FACE                        l1029 FBC2                        l1037 FB1E  
                      l1061 FDD0                        l1053 FD98                        l1039 FB42  
                      l1119 FFA6                        l1071 FE22                        l1063 FDDE  
                      l1055 FDA8                        l1047 FD90                        l1073 FE44  
                      l1065 FDEE                        l1057 FDAC                        l1083 FE68  
                      l1067 FE00                        l1075 FE4C                        l1059 FDC8  
                      l1085 FE74                        l1077 FE60                        l1093 FED0  
                      l1069 FE0C                        l1167 FD78                        l1095 FEE4  
                      l1087 FE8A                        l1169 FCC0                        l1089 FEAC  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                 main@counter 003D  
                      _led2 003F                        _main FD90                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
             _led_switch_on FAF6                        prodl 000FF3                        start 0000  
               led_init@led 002F                ___param_bank 000000                       ?_main 0027  
          led_switch_on@led 002F                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _PORTD 000F83                       _PORTE 000F84  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96           _set_pin_direction FC20  
              ?_read_button 0031          ?_set_pin_direction 0027                       main@i 003B  
                     main@x 0036                       tablat 000FF5              _led_switch_off FACE  
                     status 000FD8              ?_led_switch_on 002F         ??_set_pin_direction 0029  
           __initialization FB46                __end_of_main 0000                      ??_main 0034  
             __activetblptr 000002   __end_of_set_pin_direction FCD8           led_switch_off@led 002F  
    __end_of_led_switch_off FAF6            __end_of_led_init FBC0            __end_of_read_pin FC20  
  set_pin_direction@pin_num 0027                __pdataCOMRAM 0001                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                 read_pin@val 0030  
           ?_led_switch_off 002F             ??_led_switch_on 0031                  __accesstop 0060  
   __end_of__initialization FB68               ___rparam_used 000001              __pcstackCOMRAM 0027  
__size_of_set_pin_direction 00B8        __size_of_read_button 0028           read_button@status 0033  
                 ?_led_init 002F                   ?_read_pin 0027          __size_of_write_pin 00B8  
                   __Hparam 0000                     __Lparam 0000           read_pin@port_name 002F  
                   __pcinit FB46                     __ramtop 1000                     __ptext0 FD90  
                   __ptext1 FB1E                     __ptext2 FBC0                     __ptext3 FAF6  
                   __ptext4 FACE                     __ptext5 FB72                     __ptext6 FCD8  
                   __ptext7 FC20                     _lat_reg 000B                     _button1 0026  
                ??_led_init 0031        end_of_initialization FB68               __Lmediumconst 0000  
                ??_read_pin 0028                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE            write_pin@pin_num 0027  
          ??_led_switch_off 0031           __end_of_write_pin FD90               __pidataCOMRAM FAA8  
       start_initialization FB46       __end_of_led_switch_on FB1E  set_pin_direction@direction 0028  
               __pbssCOMRAM 003F               ??_read_button 0033           __size_of_led_init 004E  
         __size_of_read_pin 0060  set_pin_direction@port_name 002E         __end_of_read_button FB46  
                 _write_pin FCD8                   copy_data0 FB5A                    __Hrparam 0000  
                  __Lrparam 0000                 _read_button FB1E                  ?_write_pin 0027  
                  _led_init FB72             read_pin@pin_num 0027               __size_of_main 0270  
                  _read_pin FBC0                    _port_reg 0001                    main@i_93 0037  
                  main@i_94 0039                    _tris_reg 0015              read_button@but 0031  
   __size_of_led_switch_off 0028      __size_of_led_switch_on 0028                 ??_write_pin 0029  
         write_pin@pin_mode 0028          write_pin@port_name 002E  
